#!/usr/bin/python
import urllib
import httplib
import pickle
import argparse
import random
import re
import sys

parser = argparse.ArgumentParser()
parser.add_argument("-w", "--words", type=int, help="number of words to print")
parser.add_argument("-s", "--salt", action='store_true', help="Salt the passphrase")

args = parser.parse_args()
words = args.words
salt = args.salt

num = words * 5

# parameterDict = {'num': 35, 'min':1, 'max':6, 'col': 5, 'base':10,
#     'format': 'plain', 'rnd':'new' }
# params = urllib.urlencode(parameterDict)
# conn = httplib.HTTPSConnection("www.random.org")
# conn.set_debuglevel(0)
# conn.request("GET", "/integers/?" + params)
# response = conn.getresponse()
# rolls = response.read()

r = random.SystemRandom()
# Create words number of 5-digit random dice rolls
# For example, if words = 5:
# [56551,
# 45562,
# 22643,
# 43322,
# 22364]
chars = '@$%^&*{[}]+_-<>,.;:'

rolls = [''.join([str(r.randint(1,6)) for n in range(5)]) for n in range(words)]

f = open('dicewarePickle.txt', 'r')

rolldict = pickle.load(f)

f.close

passphrase_length = 0

words = []

for roll in rolls:
    word = rolldict[roll]
    words.append(word)
    words.append(".")

# Apply salt
if salt:
    for i, w in enumerate(words):
        if w[0].isalpha():
            words[i] = w.capitalize()
            break

    rolls.append("SALT:")
    words.append("{0:02}".format(r.randint(0,99)) + chars[r.randint(0,len(chars)-1)])

# for roll,word in zip(rolls,words):
#     print roll + '\t' + word

words = ''.join(words)

# print '\nTotal characters:', len(words)

# print '\nAs one word:'
# print words

sys.stdout.write(words)

# write over the results in memory to prevent future discovery
# But according to http://stackoverflow.com/questions/728164/securely-erasing-password-in-memory-python
# this is useless
# rolls = ''.join([str(r.randint(1,6)) for n in range(num)])
# words = ''.join([str(r.randint(1,6)) for n in range(num)])



